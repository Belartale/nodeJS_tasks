// что бы експортировать нужно 
// гдеЭкспорт.js
  const text1 = "TEXT1";
  module.exports = text1;

// гдеИмпорт.js
  const tex = require("./exports.js");
  console.log(tex);

// __dirname системная переменая которая показ папку 
//E:\git\nodeJS_tasks

// __filename
//E:\git\nodeJS_tasks.js

// path.basename(__filename)
basename === название файла

dirname === полный путь к папке

extname === type file

parse === даёт обект с разными ключами

join == возрощяет строку

// читает файл writeFile
const filePath = path.join(__dirname, "test", "some text.txt");
fs.writeFile(filePath, "lorem", (err) => {
  if (err) {
    throw err;
  }
  console.log("created .txt!!!");
});

// appendFile тоже самое только добавляет

// fs.readFile читает файл
 1 path
 2 "utf-8"
 3 (err, content) => { ... }

fs.readFile(filePath, "utf-8", (err, content) => {
  if (err) {
    throw err;
  }
  console.log("content", content);
});

// os === операционка 

os.platfrom() === какая ОС
os.arch() === какая 86 или 32
.cpus() === процессор
.freemem() === сколько своб пам
.totalmem() === Всего памяти
.homedir() === базовая дириктория
.uptime() === сколько включем помп (в секундаъ)

// events

.on прослушивать собитие
1 название собития
2 колбэк
но нужно имитить это

.emit на выпуск
1 название
2 даные которые я хочу передать

// http создание веб сервера
let server = http.createServer((req, res) => {
  res.end("helll nodejs");
});
//req ответ юзера
//res ответ сервера

.end === завершение ответа из сервера
.writeHead === "Content-Type": "text/html"

server.listen(300 <anfn>)

// патек nodemon провераяет код и перезаг сервер 

*******************************************************************************
////////////////////////////////////////   Express JS
*******************************************************************************
в pakecge добавить "type": "module"

import express from "express";

const app = express(); // app эти типа объекта и инициализация

app.listen(3000, () => {
  console.log("server start 3000!!! ...");
}); // создание веб сервера

// потом node index

//const PORT = process.env.PORT ?? 3000 // В консоле пишем set PORT=4200 && node index если хотим чтобы было в другом порте 

// это для того что бы webstorm понимал интерфейс express
npm i -D @types/express

// это для get запроса, мы отправляем send
app.get("/", (req, res) => {
  res.send("<h1>exp</h1>");
});

// для автомата перезапуск сервера и странисы в браузере 
npm i -D nodemon 













